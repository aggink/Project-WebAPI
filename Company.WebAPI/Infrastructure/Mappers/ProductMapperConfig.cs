using Company.Base.Mapper;
using Company.Entity;
using Company.WebAPI.ViewModels.ProductViewModels;

namespace Company.WebAPI.Infrastructure.Mappers;

public class ProductMapperConfig : MapperConfig
{
    public ProductMapperConfig()
    {
        #region CreateMap ViewModel

        CreateMap<Product, ProductViewModel>()
            .ForMember(x => x.Id, o => o.MapFrom(x => x.Id))
            .ForMember(x => x.URL, o => o.Ignore())
            .ForMember(x => x.Name, o => o.MapFrom(x => x.Name))
            .ForMember(x => x.Manufacturer, o => o.MapFrom(x => x.Manufacturer))
            .ForMember(x => x.Article, o => o.MapFrom(x => x.Article))
            .ForMember(x => x.Price, o => o.MapFrom(x => x.Price))
            .ForMember(x => x.Availability, o => o.MapFrom(x => x.Availability))
            .ForMember(x => x.AvailabilityType, o => o.MapFrom(x => x.AvailabilityType))
            .ForMember(x => x.Weight, o => o.MapFrom(x => x.Weight))
            .ForMember(x => x.Vendor, o => o.MapFrom(x => x.Vendor))
            .ForMember(x => x.CodeProduct, o => o.MapFrom(x => x.CodeProduct))
            .ForMember(x => x.Description, o => o.MapFrom(x => x.Description))
            .ForMember(x => x.Color, o => o.MapFrom(x => x.Color))
            .ForMember(x => x.Compatibility, o => o.MapFrom(x => x.Compatibility))
            .ForMember(x => x.LengthWidthHeight, o => o.MapFrom(x => x.LengthWidthHeight))
            .ForMember(x => x.Model, o => o.MapFrom(x => x.Model))
            .ForMember(x => x.AnalogProduct, o => o.MapFrom(x => x.AnalogProduct))
            .ForMember(x => x.Resource, o => o.MapFrom(x => x.Resource))
            .ForMember(x => x.TypeProduct, o => o.MapFrom(x => x.TypeProduct))
            .ForMember(x => x.TypeEquipment, o => o.MapFrom(x => x.TypeEquipment))
            .ForMember(x => x.OriginallyProduct, o => o.MapFrom(x => x.OriginallyProduct))
            .ForMember(x => x.SeriesProduct, o => o.MapFrom(x => x.SeriesProduct))
            .ForMember(x => x.PriceFrom5, o => o.MapFrom(x => x.PriceFrom5))
            .ForMember(x => x.PriceFrom10, o => o.MapFrom(x => x.PriceFrom10))
            .ForMember(x => x.CodeTN, o => o.MapFrom(x => x.CodeTN))
            .ForMember(x => x.PrinterCompatibility, o => o.MapFrom(x => x.PrinterCompatibility))
            .ForMember(x => x.CartridgeCompatibility, o => o.MapFrom(x => x.CartridgeCompatibility))
            .ForMember(x => x.QuantityPackage, o => o.MapFrom(x => x.QuantityPackage))
            .ForMember(x => x.TrademarkAndPN, o => o.MapFrom(x => x.TrademarkAndPN))
            .ForMember(x => x.Category, o => o.MapFrom(x => x.Category));

        CreateMap<ProductViewModel, Product>()
            .ForMember(x => x.Id, o => o.MapFrom(x => x.Id))
            .ForMember(x => x.Name, o => o.MapFrom(x => x.Name))
            .ForMember(x => x.Manufacturer, o => o.MapFrom(x => x.Manufacturer))
            .ForMember(x => x.Article, o => o.MapFrom(x => x.Article))
            .ForMember(x => x.Price, o => o.MapFrom(x => x.Price))
            .ForMember(x => x.Availability, o => o.MapFrom(x => x.Availability))
            .ForMember(x => x.AvailabilityType, o => o.MapFrom(x => x.AvailabilityType))
            .ForMember(x => x.Weight, o => o.MapFrom(x => x.Weight))
            .ForMember(x => x.Vendor, o => o.MapFrom(x => x.Vendor))
            .ForMember(x => x.CodeProduct, o => o.MapFrom(x => x.CodeProduct))
            .ForMember(x => x.Description, o => o.MapFrom(x => x.Description))
            .ForMember(x => x.Color, o => o.MapFrom(x => x.Color))
            .ForMember(x => x.Compatibility, o => o.MapFrom(x => x.Compatibility))
            .ForMember(x => x.LengthWidthHeight, o => o.MapFrom(x => x.LengthWidthHeight))
            .ForMember(x => x.Model, o => o.MapFrom(x => x.Model))
            .ForMember(x => x.AnalogProduct, o => o.MapFrom(x => x.AnalogProduct))
            .ForMember(x => x.Resource, o => o.MapFrom(x => x.Resource))
            .ForMember(x => x.TypeProduct, o => o.MapFrom(x => x.TypeProduct))
            .ForMember(x => x.TypeEquipment, o => o.MapFrom(x => x.TypeEquipment))
            .ForMember(x => x.OriginallyProduct, o => o.MapFrom(x => x.OriginallyProduct))
            .ForMember(x => x.SeriesProduct, o => o.MapFrom(x => x.SeriesProduct))
            .ForMember(x => x.PriceFrom5, o => o.MapFrom(x => x.PriceFrom5))
            .ForMember(x => x.PriceFrom10, o => o.MapFrom(x => x.PriceFrom10))
            .ForMember(x => x.CodeTN, o => o.MapFrom(x => x.CodeTN))
            .ForMember(x => x.PrinterCompatibility, o => o.MapFrom(x => x.PrinterCompatibility))
            .ForMember(x => x.CartridgeCompatibility, o => o.MapFrom(x => x.CartridgeCompatibility))
            .ForMember(x => x.QuantityPackage, o => o.MapFrom(x => x.QuantityPackage))
            .ForMember(x => x.TrademarkAndPN, o => o.MapFrom(x => x.TrademarkAndPN))
            .ForMember(x => x.Category, o => o.MapFrom(x => x.Category))
            .ForMember(x => x.TextProductId, o => o.Ignore())
            .ForMember(x => x.ParseValuesProduct, o => o.Ignore())
            .ForMember(x => x.CreatedAt, o => o.Ignore())
            .ForMember(x => x.CreatedBy, o => o.Ignore())
            .ForMember(x => x.UpdatedAt, o => o.Ignore())
            .ForMember(x => x.UpdatedBy, o => o.Ignore());

        AddPagedListMapperConfig<Product, ProductViewModel>();

        #endregion

        #region CreateMap CreateViewModel

        CreateMap<Product, CreateProductViewModel>()
            .ForMember(x => x.Name, o => o.MapFrom(x => x.Name))
            .ForMember(x => x.Manufacturer, o => o.MapFrom(x => x.Manufacturer))
            .ForMember(x => x.Article, o => o.MapFrom(x => x.Article))
            .ForMember(x => x.Price, o => o.MapFrom(x => x.Price))
            .ForMember(x => x.Availability, o => o.MapFrom(x => x.Availability))
            .ForMember(x => x.AvailabilityType, o => o.MapFrom(x => x.AvailabilityType))
            .ForMember(x => x.Weight, o => o.MapFrom(x => x.Weight))
            .ForMember(x => x.Vendor, o => o.MapFrom(x => x.Vendor))
            .ForMember(x => x.CodeProduct, o => o.MapFrom(x => x.CodeProduct))
            .ForMember(x => x.Description, o => o.MapFrom(x => x.Description))
            .ForMember(x => x.Color, o => o.MapFrom(x => x.Color))
            .ForMember(x => x.Compatibility, o => o.MapFrom(x => x.Compatibility))
            .ForMember(x => x.LengthWidthHeight, o => o.MapFrom(x => x.LengthWidthHeight))
            .ForMember(x => x.Model, o => o.MapFrom(x => x.Model))
            .ForMember(x => x.AnalogProduct, o => o.MapFrom(x => x.AnalogProduct))
            .ForMember(x => x.Resource, o => o.MapFrom(x => x.Resource))
            .ForMember(x => x.TypeProduct, o => o.MapFrom(x => x.TypeProduct))
            .ForMember(x => x.TypeEquipment, o => o.MapFrom(x => x.TypeEquipment))
            .ForMember(x => x.OriginallyProduct, o => o.MapFrom(x => x.OriginallyProduct))
            .ForMember(x => x.SeriesProduct, o => o.MapFrom(x => x.SeriesProduct))
            .ForMember(x => x.PriceFrom5, o => o.MapFrom(x => x.PriceFrom5))
            .ForMember(x => x.PriceFrom10, o => o.MapFrom(x => x.PriceFrom10))
            .ForMember(x => x.CodeTN, o => o.MapFrom(x => x.CodeTN))
            .ForMember(x => x.PrinterCompatibility, o => o.MapFrom(x => x.PrinterCompatibility))
            .ForMember(x => x.CartridgeCompatibility, o => o.MapFrom(x => x.CartridgeCompatibility))
            .ForMember(x => x.QuantityPackage, o => o.MapFrom(x => x.QuantityPackage))
            .ForMember(x => x.TrademarkAndPN, o => o.MapFrom(x => x.TrademarkAndPN))
            .ForMember(x => x.Category, o => o.MapFrom(x => x.Category));

        CreateMap<CreateProductViewModel, Product>()
            .ForMember(x => x.Name, o => o.MapFrom(x => x.Name))
            .ForMember(x => x.Manufacturer, o => o.MapFrom(x => x.Manufacturer))
            .ForMember(x => x.Article, o => o.MapFrom(x => x.Article))
            .ForMember(x => x.Price, o => o.MapFrom(x => x.Price))
            .ForMember(x => x.Availability, o => o.MapFrom(x => x.Availability))
            .ForMember(x => x.AvailabilityType, o => o.MapFrom(x => x.AvailabilityType))
            .ForMember(x => x.Weight, o => o.MapFrom(x => x.Weight))
            .ForMember(x => x.Vendor, o => o.MapFrom(x => x.Vendor))
            .ForMember(x => x.CodeProduct, o => o.MapFrom(x => x.CodeProduct))
            .ForMember(x => x.Description, o => o.MapFrom(x => x.Description))
            .ForMember(x => x.Color, o => o.MapFrom(x => x.Color))
            .ForMember(x => x.Compatibility, o => o.MapFrom(x => x.Compatibility))
            .ForMember(x => x.LengthWidthHeight, o => o.MapFrom(x => x.LengthWidthHeight))
            .ForMember(x => x.Model, o => o.MapFrom(x => x.Model))
            .ForMember(x => x.AnalogProduct, o => o.MapFrom(x => x.AnalogProduct))
            .ForMember(x => x.Resource, o => o.MapFrom(x => x.Resource))
            .ForMember(x => x.TypeProduct, o => o.MapFrom(x => x.TypeProduct))
            .ForMember(x => x.TypeEquipment, o => o.MapFrom(x => x.TypeEquipment))
            .ForMember(x => x.OriginallyProduct, o => o.MapFrom(x => x.OriginallyProduct))
            .ForMember(x => x.SeriesProduct, o => o.MapFrom(x => x.SeriesProduct))
            .ForMember(x => x.PriceFrom5, o => o.MapFrom(x => x.PriceFrom5))
            .ForMember(x => x.PriceFrom10, o => o.MapFrom(x => x.PriceFrom10))
            .ForMember(x => x.CodeTN, o => o.MapFrom(x => x.CodeTN))
            .ForMember(x => x.PrinterCompatibility, o => o.MapFrom(x => x.PrinterCompatibility))
            .ForMember(x => x.CartridgeCompatibility, o => o.MapFrom(x => x.CartridgeCompatibility))
            .ForMember(x => x.QuantityPackage, o => o.MapFrom(x => x.QuantityPackage))
            .ForMember(x => x.TrademarkAndPN, o => o.MapFrom(x => x.TrademarkAndPN))
            .ForMember(x => x.Category, o => o.MapFrom(x => x.Category))
            .ForMember(x => x.Id, o => o.Ignore())
            .ForMember(x => x.TextProductId, o => o.Ignore())
            .ForMember(x => x.ParseValuesProduct, o => o.Ignore())
            .ForMember(x => x.CreatedAt, o => o.Ignore())
            .ForMember(x => x.CreatedBy, o => o.Ignore())
            .ForMember(x => x.UpdatedAt, o => o.Ignore())
            .ForMember(x => x.UpdatedBy, o => o.Ignore());

        #endregion

        #region CreateMap UpdateViewModel

        CreateMap<Product, UpdateProductViewModel>()
            .ForMember(x => x.Id, o => o.MapFrom(x => x.Id))
            .ForMember(x => x.Name, o => o.MapFrom(x => x.Name))
            .ForMember(x => x.Manufacturer, o => o.MapFrom(x => x.Manufacturer))
            .ForMember(x => x.Article, o => o.MapFrom(x => x.Article))
            .ForMember(x => x.Price, o => o.MapFrom(x => x.Price))
            .ForMember(x => x.Availability, o => o.MapFrom(x => x.Availability))
            .ForMember(x => x.AvailabilityType, o => o.MapFrom(x => x.AvailabilityType))
            .ForMember(x => x.Weight, o => o.MapFrom(x => x.Weight))
            .ForMember(x => x.Vendor, o => o.MapFrom(x => x.Vendor))
            .ForMember(x => x.CodeProduct, o => o.MapFrom(x => x.CodeProduct))
            .ForMember(x => x.Description, o => o.MapFrom(x => x.Description))
            .ForMember(x => x.Color, o => o.MapFrom(x => x.Color))
            .ForMember(x => x.Compatibility, o => o.MapFrom(x => x.Compatibility))
            .ForMember(x => x.LengthWidthHeight, o => o.MapFrom(x => x.LengthWidthHeight))
            .ForMember(x => x.Model, o => o.MapFrom(x => x.Model))
            .ForMember(x => x.AnalogProduct, o => o.MapFrom(x => x.AnalogProduct))
            .ForMember(x => x.Resource, o => o.MapFrom(x => x.Resource))
            .ForMember(x => x.TypeProduct, o => o.MapFrom(x => x.TypeProduct))
            .ForMember(x => x.TypeEquipment, o => o.MapFrom(x => x.TypeEquipment))
            .ForMember(x => x.OriginallyProduct, o => o.MapFrom(x => x.OriginallyProduct))
            .ForMember(x => x.SeriesProduct, o => o.MapFrom(x => x.SeriesProduct))
            .ForMember(x => x.PriceFrom5, o => o.MapFrom(x => x.PriceFrom5))
            .ForMember(x => x.PriceFrom10, o => o.MapFrom(x => x.PriceFrom10))
            .ForMember(x => x.CodeTN, o => o.MapFrom(x => x.CodeTN))
            .ForMember(x => x.PrinterCompatibility, o => o.MapFrom(x => x.PrinterCompatibility))
            .ForMember(x => x.CartridgeCompatibility, o => o.MapFrom(x => x.CartridgeCompatibility))
            .ForMember(x => x.QuantityPackage, o => o.MapFrom(x => x.QuantityPackage))
            .ForMember(x => x.TrademarkAndPN, o => o.MapFrom(x => x.TrademarkAndPN))
            .ForMember(x => x.Category, o => o.MapFrom(x => x.Category));

        CreateMap<UpdateProductViewModel, Product>()
            .ForMember(x => x.Id, o => o.MapFrom(x => x.Id))
            .ForMember(x => x.Name, o => o.MapFrom(x => x.Name))
            .ForMember(x => x.Manufacturer, o => o.MapFrom(x => x.Manufacturer))
            .ForMember(x => x.Article, o => o.MapFrom(x => x.Article))
            .ForMember(x => x.Price, o => o.MapFrom(x => x.Price))
            .ForMember(x => x.Availability, o => o.MapFrom(x => x.Availability))
            .ForMember(x => x.AvailabilityType, o => o.MapFrom(x => x.AvailabilityType))
            .ForMember(x => x.Weight, o => o.MapFrom(x => x.Weight))
            .ForMember(x => x.Vendor, o => o.MapFrom(x => x.Vendor))
            .ForMember(x => x.CodeProduct, o => o.MapFrom(x => x.CodeProduct))
            .ForMember(x => x.Description, o => o.MapFrom(x => x.Description))
            .ForMember(x => x.Color, o => o.MapFrom(x => x.Color))
            .ForMember(x => x.Compatibility, o => o.MapFrom(x => x.Compatibility))
            .ForMember(x => x.LengthWidthHeight, o => o.MapFrom(x => x.LengthWidthHeight))
            .ForMember(x => x.Model, o => o.MapFrom(x => x.Model))
            .ForMember(x => x.AnalogProduct, o => o.MapFrom(x => x.AnalogProduct))
            .ForMember(x => x.Resource, o => o.MapFrom(x => x.Resource))
            .ForMember(x => x.TypeProduct, o => o.MapFrom(x => x.TypeProduct))
            .ForMember(x => x.TypeEquipment, o => o.MapFrom(x => x.TypeEquipment))
            .ForMember(x => x.OriginallyProduct, o => o.MapFrom(x => x.OriginallyProduct))
            .ForMember(x => x.SeriesProduct, o => o.MapFrom(x => x.SeriesProduct))
            .ForMember(x => x.PriceFrom5, o => o.MapFrom(x => x.PriceFrom5))
            .ForMember(x => x.PriceFrom10, o => o.MapFrom(x => x.PriceFrom10))
            .ForMember(x => x.CodeTN, o => o.MapFrom(x => x.CodeTN))
            .ForMember(x => x.PrinterCompatibility, o => o.MapFrom(x => x.PrinterCompatibility))
            .ForMember(x => x.CartridgeCompatibility, o => o.MapFrom(x => x.CartridgeCompatibility))
            .ForMember(x => x.QuantityPackage, o => o.MapFrom(x => x.QuantityPackage))
            .ForMember(x => x.TrademarkAndPN, o => o.MapFrom(x => x.TrademarkAndPN))
            .ForMember(x => x.Category, o => o.MapFrom(x => x.Category))
            .ForMember(x => x.TextProductId, o => o.Ignore())
            .ForMember(x => x.ParseValuesProduct, o => o.Ignore())
            .ForMember(x => x.CreatedAt, o => o.Ignore())
            .ForMember(x => x.CreatedBy, o => o.Ignore())
            .ForMember(x => x.UpdatedAt, o => o.Ignore())
            .ForMember(x => x.UpdatedBy, o => o.Ignore());

        #endregion
    }
}